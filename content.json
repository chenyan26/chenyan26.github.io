{"meta":{"title":"Echo Chen的地盘","subtitle":null,"description":"时…过了…境…也…迁了","author":"Echo Chen","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"【堆堆架构】搭建APM(应用性能管理）平台","slug":"堆堆架构/搭建APM(应用性能管理）平台","date":"2019-10-21T03:21:05.000Z","updated":"2019-10-22T01:00:51.594Z","comments":true,"path":"堆堆架构/搭建APM(应用性能管理）平台/","link":"","permalink":"http://yoursite.com/堆堆架构/搭建APM(应用性能管理）平台/","excerpt":"","text":"","categories":[{"name":"堆堆架构","slug":"堆堆架构","permalink":"http://yoursite.com/categories/堆堆架构/"}],"tags":[{"name":"性能","slug":"性能","permalink":"http://yoursite.com/tags/性能/"},{"name":"APM","slug":"APM","permalink":"http://yoursite.com/tags/APM/"},{"name":"监控","slug":"监控","permalink":"http://yoursite.com/tags/监控/"},{"name":"架构","slug":"架构","permalink":"http://yoursite.com/tags/架构/"},{"name":"实践爬坑","slug":"实践爬坑","permalink":"http://yoursite.com/tags/实践爬坑/"}]},{"title":"【玩玩前端】Electron","slug":"玩玩前端/Electron","date":"2019-10-19T07:13:47.000Z","updated":"2019-10-22T01:01:44.281Z","comments":true,"path":"玩玩前端/Electron/","link":"","permalink":"http://yoursite.com/玩玩前端/Electron/","excerpt":"","text":"","categories":[{"name":"玩玩前端","slug":"玩玩前端","permalink":"http://yoursite.com/categories/玩玩前端/"}],"tags":[{"name":"Electron","slug":"Electron","permalink":"http://yoursite.com/tags/Electron/"}]},{"title":"【玩玩前端】高阶组件(HOC)","slug":"玩玩前端/高阶组件(HOC)","date":"2019-10-18T11:58:05.000Z","updated":"2019-10-22T01:01:57.894Z","comments":true,"path":"玩玩前端/高阶组件(HOC)/","link":"","permalink":"http://yoursite.com/玩玩前端/高阶组件(HOC)/","excerpt":"","text":"","categories":[{"name":"玩玩前端","slug":"玩玩前端","permalink":"http://yoursite.com/categories/玩玩前端/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"},{"name":"React","slug":"React","permalink":"http://yoursite.com/tags/React/"}]},{"title":"【踩踩后端】Elasticsearch","slug":"踩踩后端/Elasticsearch","date":"2019-09-21T08:50:05.000Z","updated":"2019-10-21T09:24:27.013Z","comments":true,"path":"踩踩后端/Elasticsearch/","link":"","permalink":"http://yoursite.com/踩踩后端/Elasticsearch/","excerpt":"","text":"","categories":[{"name":"踩踩后端","slug":"踩踩后端","permalink":"http://yoursite.com/categories/踩踩后端/"}],"tags":[{"name":"实践爬坑","slug":"实践爬坑","permalink":"http://yoursite.com/tags/实践爬坑/"},{"name":"Elasticsearch","slug":"Elasticsearch","permalink":"http://yoursite.com/tags/Elasticsearch/"}]},{"title":"【玩玩前端】Cordova","slug":"玩玩前端/Cordova","date":"2019-09-03T05:28:32.000Z","updated":"2019-10-22T01:01:48.305Z","comments":true,"path":"玩玩前端/Cordova/","link":"","permalink":"http://yoursite.com/玩玩前端/Cordova/","excerpt":"","text":"","categories":[{"name":"玩玩前端","slug":"玩玩前端","permalink":"http://yoursite.com/categories/玩玩前端/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"},{"name":"Cordova","slug":"Cordova","permalink":"http://yoursite.com/tags/Cordova/"},{"name":"Hybird","slug":"Hybird","permalink":"http://yoursite.com/tags/Hybird/"}]},{"title":"【堆堆架构】构建前端性能监控系统","slug":"堆堆架构/构建前端性能监控系统","date":"2019-08-12T04:03:25.000Z","updated":"2019-10-22T03:41:02.039Z","comments":true,"path":"堆堆架构/构建前端性能监控系统/","link":"","permalink":"http://yoursite.com/堆堆架构/构建前端性能监控系统/","excerpt":"前端的架构建设本身是有一定的复杂度的，但是不论架构复杂还是简单都有其设计理由（主要是人力、时间、能力值）和目的。架构上的投入需要能获得对应的收益，每项投入的收益就成为我们架构建设成果的评估标准之一。 年初我们采用了服务端渲染SSR技术来提升我们的首屏页面打开速度，那如何监控和衡量各个国家关键页面的首屏渲染耗时、分析定位高于预期耗时的页面的问题就成为我们架构建设的一个（KPI体现+甩锅依据）重点。","text":"前端的架构建设本身是有一定的复杂度的，但是不论架构复杂还是简单都有其设计理由（主要是人力、时间、能力值）和目的。架构上的投入需要能获得对应的收益，每项投入的收益就成为我们架构建设成果的评估标准之一。 年初我们采用了服务端渲染SSR技术来提升我们的首屏页面打开速度，那如何监控和衡量各个国家关键页面的首屏渲染耗时、分析定位高于预期耗时的页面的问题就成为我们架构建设的一个（KPI体现+甩锅依据）重点。 背景尽管服务端渲染SSR确实有很多的优点，但是也为整个前端项目引入了复杂度。前端不再是只是build出项目的静态文件产物，还需要维护SSR的Server（即采用Egg所运行的Node服务）的正常运行。我们花费了很多的精力来保障Node服务的正常运行（之前趟了不少Node的坑，但是也填不平现在的坑呀～），组里的Node大神经过封封邮件洗礼已然进入淡然面对Node的花样挂科的境界。 吐槽至此，该说正事了。 前端性能衡量指标先来看看常规的前端性能衡量指标：Performance API","categories":[{"name":"堆堆架构","slug":"堆堆架构","permalink":"http://yoursite.com/categories/堆堆架构/"}],"tags":[{"name":"性能","slug":"性能","permalink":"http://yoursite.com/tags/性能/"},{"name":"监控","slug":"监控","permalink":"http://yoursite.com/tags/监控/"},{"name":"架构","slug":"架构","permalink":"http://yoursite.com/tags/架构/"},{"name":"实践爬坑","slug":"实践爬坑","permalink":"http://yoursite.com/tags/实践爬坑/"}]},{"title":"【玩玩前端】iframe的坑","slug":"玩玩前端/iframe的坑","date":"2019-08-10T14:53:35.000Z","updated":"2019-10-21T09:25:09.326Z","comments":true,"path":"玩玩前端/iframe的坑/","link":"","permalink":"http://yoursite.com/玩玩前端/iframe的坑/","excerpt":"","text":"","categories":[{"name":"玩玩前端","slug":"玩玩前端","permalink":"http://yoursite.com/categories/玩玩前端/"}],"tags":[{"name":"实践爬坑","slug":"实践爬坑","permalink":"http://yoursite.com/tags/实践爬坑/"},{"name":"iframe","slug":"iframe","permalink":"http://yoursite.com/tags/iframe/"}]},{"title":"【玩玩前端】花式提高代码复用率","slug":"玩玩前端/花式提高代码复用率","date":"2019-05-09T11:51:38.000Z","updated":"2019-10-22T00:54:54.768Z","comments":true,"path":"玩玩前端/花式提高代码复用率/","link":"","permalink":"http://yoursite.com/玩玩前端/花式提高代码复用率/","excerpt":"前情提要：就是吐槽，不然干嘛非跟代码复用率死扛啊（我说的不是抽象啊喂） 作为一个外企（外资+基本不加班？）研发中心的大前端团队，咱们自然是责任重大（可见的都要你做，本来Native做的也想转给你做…呜）要同时为三个国家（可能明年再加N个国家）进行同质化（79.99%）的业务开发: 面向local（就是外国的那些）运营人员的BE后台管理系统 面向公司及合作方高层的Dashboard报表系统 独立的面向客户的手机m站 内嵌于Native的hybrid页面 为了提升开发及发版效率、降低首屏及白屏时间使用SSR的online页面 未来不断增加的各种系统项目……","text":"前情提要：就是吐槽，不然干嘛非跟代码复用率死扛啊（我说的不是抽象啊喂） 作为一个外企（外资+基本不加班？）研发中心的大前端团队，咱们自然是责任重大（可见的都要你做，本来Native做的也想转给你做…呜）要同时为三个国家（可能明年再加N个国家）进行同质化（79.99%）的业务开发: 面向local（就是外国的那些）运营人员的BE后台管理系统 面向公司及合作方高层的Dashboard报表系统 独立的面向客户的手机m站 内嵌于Native的hybrid页面 为了提升开发及发版效率、降低首屏及白屏时间使用SSR的online页面 未来不断增加的各种系统项目…… Git SubmodulesMixinVue组件继承公共业务组件","categories":[{"name":"玩玩前端","slug":"玩玩前端","permalink":"http://yoursite.com/categories/玩玩前端/"}],"tags":[{"name":"实践爬坑","slug":"实践爬坑","permalink":"http://yoursite.com/tags/实践爬坑/"},{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"}]},{"title":"【堆堆架构】用C4模型画软件架构图","slug":"堆堆架构/用C4模型画软件架构图","date":"2019-02-21T11:21:05.000Z","updated":"2019-10-22T03:51:19.460Z","comments":true,"path":"堆堆架构/用C4模型画软件架构图/","link":"","permalink":"http://yoursite.com/堆堆架构/用C4模型画软件架构图/","excerpt":"探寻架构之路时总会迷茫，找不到方向缺少实践的指导和有力的工具。之前曾试着架构过iOS的分层和网络架构，但还是有些思路混乱、分析边界不清晰。 偶然阅读到两篇文章《软件架构图的艺术》、《用于软件架构的C4模型》，一时间感觉整个视野打开了，心情豁然开朗。原来我的架构的混乱并不只是缺乏足够的架构思维训练，主要是设计时层级没有区分产生的冲突、抽象没有清晰导致的混乱。","text":"探寻架构之路时总会迷茫，找不到方向缺少实践的指导和有力的工具。之前曾试着架构过iOS的分层和网络架构，但还是有些思路混乱、分析边界不清晰。 偶然阅读到两篇文章《软件架构图的艺术》、《用于软件架构的C4模型》，一时间感觉整个视野打开了，心情豁然开朗。原来我的架构的混乱并不只是缺乏足够的架构思维训练，主要是设计时层级没有区分产生的冲突、抽象没有清晰导致的混乱。 C4模型 C4代表上下文（Context）、容器（Container）、组件（Component）和代码（Code）——一系列分层的图表，可以用这些图表来描述不同缩放级别的软件架构，每种图表都适用于不同的受众。 第1层：系统上下文（Context）它显示了正在构建的软件系统，以及系统与用户及其他软件系统之间的关系。 第2层：容器（Container将软件系统放大，显示组成该软件系统的容器（应用程序、数据存储、微服务等）。 第3层：组件（Component）将单个容器放大，以显示其中的组件。这些组件映射到代码库中的真实抽象（例如一组代码）。 第4层：代码（Code）可以放大个别组件，以显示该组件的实现方式。 PlantUML经过对 https://c4model.com/ 的研读，发现有不少的Tooling可供选择。考虑到Structurizr需要付费使用，draw.io插件的使用方式比较耗时不便。其中通过C4-PlantUML可以方便快捷的使用PlantUML（以前用在Confluence它画过UML图，感觉编码的方式绘图真的很方便），而且VSCode也有PlantUML Extension可以帮助我们快速预览。但是安装的过程中也遇到了一些问题： Requirements for Local render12brew cask install javabrew install graphviz 选择正确的Extension图中另外两个扩展是完全不要装的，我因为安装了它们导致了key map绑定冲突、还有扩展本身问题无法使用的问题，所以特意记录提醒。 C4-PlantUML参考文档使用只需要引入Context、Container、Componen的puml文件，示例如下：123456789101112131415@startuml Basic Sample!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Context.puml!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Component.pumlPerson(admin, &quot;Administrator&quot;)System_Boundary(c1, &quot;Sample System&quot;) &#123; Container(web_app, &quot;Web Application&quot;, &quot;C#, ASP.NET Core 2.1 MVC&quot;, &quot;Allows users to compare multiple Twitter timelines&quot;)&#125;System(twitter, &quot;Twitter&quot;)Rel(admin, web_app, &quot;Uses&quot;, &quot;HTTPS&quot;)Rel(web_app, twitter, &quot;Gets tweets from&quot;, &quot;HTTPS&quot;)@enduml","categories":[{"name":"堆堆架构","slug":"堆堆架构","permalink":"http://yoursite.com/categories/堆堆架构/"}],"tags":[{"name":"架构","slug":"架构","permalink":"http://yoursite.com/tags/架构/"},{"name":"C4模型","slug":"C4模型","permalink":"http://yoursite.com/tags/C4模型/"},{"name":"软件架构图","slug":"软件架构图","permalink":"http://yoursite.com/tags/软件架构图/"}]},{"title":"个人自述（絮叨）","slug":"about","date":"2015-07-18T09:40:09.000Z","updated":"2019-10-18T15:24:35.801Z","comments":true,"path":"about/","link":"","permalink":"http://yoursite.com/about/","excerpt":"","text":"iOS developer 前端充数student－项目用过React.js+Redux/reflux 学习Node中 支持Nutz－好用且因为SSH一样不会 Android developer－只算半个 MV发烧友－酷爱 Final Cut Pro &amp; Sony Vegas 混合剪辑&amp;后期 软件工程硕士研究生 数据挖掘算法初入门 MackBook Pro 13、iPhone 6S（S党）","categories":[],"tags":[]}]}